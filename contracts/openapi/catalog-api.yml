openapi: 3.0.4
info:
  title: Catalog Service API
  version: v1
  description: API for managing and querying the video catalog and its metadata.
servers:
  - url: /api/v1/catalog
    description: Base URL for the catalog service
tags:
  - name: Catalog
    description: Operations for querying videos and metadata.

paths:
  /videos:
    get:
      tags:
        - Catalog
      summary: Gets a list of public videos (list or search results).
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Page number (zero-based).
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Number of elements per page.
        - name: query
          in: query
          required: false
          schema:
            type: string
          description: Search term for videos (title or description).
      responses:
        '200':
          description: Paginated list or search results of READY videos.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideosResponse'
        '400':
          description: Invalid pagination or search parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /videos/me:
    get:
      tags:
        - Catalog
      summary: Gets all videos belonging to the authenticated user (includes PROCESSING/FAILED states).
      security:
        - jwtAuth: []
      parameters:
        - name: X-Creator-ID
          in: header
          required: true
          schema:
            type: string
            format: uuid
          description: Creator ID (extracted from JWT by the Gateway).
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Videos for the user's profile (All states).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideosResponse'
        '401':
          description: Unauthorized.

  /videos/{creatorId}:
    get:
      tags:
        - Catalog
      summary: Gets public videos (READY status) for a specific creator.
      parameters:
        - name: creatorId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Creator ID.
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Public videos of the creator.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideosResponse'
        '400':
          description: Invalid creator ID or pagination parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /images:
    get:
      tags:
        - Catalog
      summary: Serves a video thumbnail from the local file system.
      description: "ARCHITECTURE NOTE: This is a synchronous I/O operation. In production, it should be delegated to a CDN or dedicated media service (e.g., S3)."
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
          description: Relative path of the thumbnail file (e.g., 'uploads/thumbnails/...').
      responses:
        '200':
          description: Thumbnail image served successfully.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
        '404':
          description: Image file not found (ResourceNotFoundException).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal system error when trying to read the file (IOException).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Expected JWT in the Authorization header: Bearer <token>"
  schemas:
    VideoMetadata:
      type: object
      properties:
        videoId:
          type: string
          format: uuid
          example: 9a2f7c0d-3e6f-4a8b-9c1d-2e4f6a8b0c1d
        creatorId:
          type: string
          format: uuid
          example: 1b3d5f7e-2a4c-6b8d-9e0f-1a2b3c4d5e6f
        title:
          type: string
          example: My First Microservice with Spring Boot
        description:
          type: string
          example: Complete guide to creating a video catalog.
        thumbnailUrl:
          type: string
          example: /images/image.jpg
        videoUrls:
          type: object
          additionalProperties:
            type: string
            format: url
          description: "Map of URLs by resolution (e.g., 720p: url_720)."
        duration:
          type: string
          example: 05:30
        status:
          type: string
          enum: [READY, PROCESSING, FAILED]
          description: Current status of the video.

    VideosResponse:
      type: object
      description: Paginated video response object.
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/VideoMetadata'
        page:
          type: integer
          description: Current page number (0-based).
        size:
          type: integer
          description: Elements per page.
        totalElements:
          type: integer
          format: int64
          description: Total available elements.
        totalPages:
          type: integer
          description: Total pages.

    ErrorResponse:
      type: object
      description: Standardized error response structure.
      properties:
        message:
          type: string
          example: "Image not found at path: /images/image.png"
        errorCode:
          type: string
          example: "RESOURCE_001"